"use strict";

/*
 * Copyright (C) MIKO LLC - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Nikolay Beketov, 12 2019
 *
 */

/* global globalRootUrl,globalTranslate, ace, Form, PbxApi */
var customFile = {
  $formObj: $('#custom-file-form'),
  $typeSelectDropDown: $('#custom-file-form .type-select'),
  $appCode: $('#application-code'),
  $appCodeFromServer: $('#application-code-readonly'),
  $dirrtyField: $('#dirrty'),
  editor: '',
  viewer: '',
  validateRules: {
    name: {
      identifier: 'filepath',
      rules: [{
        type: 'empty',
        prompt: globalTranslate.cf_ValidateNameIsEmpty
      }]
    }
  },
  initialize: function () {
    function initialize() {
      customFile.$typeSelectDropDown.dropdown({
        onChange: function () {
          function onChange() {
            customFile.hideShowCode();
            customFile.getFileContentFromServer();
          }

          return onChange;
        }()
      });
      customFile.initializeAce();
      customFile.initializeForm();
      customFile.getFileContentFromServer();
    }

    return initialize;
  }(),
  hideShowCode: function () {
    function hideShowCode() {
      var aceHeight = window.innerHeight - 475;
      var rowsCount = Math.round(aceHeight / 16.3);
      $(window).load(function () {
        $('.application-code-readonly').css('min-height', "".concat(aceHeight, "px"));
        $('.application-code').css('min-height', "".concat(aceHeight, "px"));
      });
      var mode = customFile.$formObj.form('get value', 'mode');

      switch (mode) {
        case 'none':
          customFile.viewer.navigateFileStart();
          customFile.$appCodeFromServer.show();
          customFile.$appCode.hide();
          customFile.viewer.setOptions({
            maxLines: rowsCount
          });
          customFile.viewer.resize();
          break;

        case 'append':
          customFile.$appCodeFromServer.show();
          customFile.viewer.navigateFileEnd();
          customFile.editor.setValue(customFile.$formObj.form('get value', 'content'));
          customFile.$appCode.show();
          customFile.editor.getSession().on('change', function () {
            customFile.$dirrtyField.val(Math.random());
            customFile.$dirrtyField.trigger('change');
          });
          break;

        case 'override':
          customFile.editor.navigateFileStart();
          customFile.$appCodeFromServer.hide();
          customFile.editor.setValue(customFile.$formObj.form('get value', 'content'));
          customFile.$appCode.show();
          customFile.editor.setOptions({
            maxLines: rowsCount
          });
          customFile.editor.resize();
          customFile.editor.getSession().on('change', function () {
            customFile.$dirrtyField.val(Math.random());
            customFile.$dirrtyField.trigger('change');
          });
          break;

        default:
          break;
      }
    }

    return hideShowCode;
  }(),
  cbGetFileContentFromServer: function () {
    function cbGetFileContentFromServer(response) {
      if (response !== undefined) {
        var fileContent = decodeURIComponent(response.data.content);
        customFile.viewer.setValue(fileContent);
        customFile.hideShowCode();
      }
    }

    return cbGetFileContentFromServer;
  }(),
  getFileContentFromServer: function () {
    function getFileContentFromServer() {
      var filePath = customFile.$formObj.form('get value', 'filepath');
      var mode = customFile.$formObj.form('get value', 'mode') !== 'override';
      var data = {
        filename: filePath,
        needOriginal: mode,
        needLogfile: false
      };
      PbxApi.GetFileContent(data, customFile.cbGetFileContentFromServer);
    }

    return getFileContentFromServer;
  }(),
  initializeAce: function () {
    function initializeAce() {
      var IniMode = ace.require('ace/mode/julia').Mode;

      customFile.viewer = ace.edit('application-code-readonly');
      customFile.viewer.session.setMode(new IniMode());
      customFile.viewer.setTheme('ace/theme/monokai');
      customFile.viewer.setOptions({
        showPrintMargin: false,
        readOnly: true
      });
      customFile.viewer.resize();
      customFile.editor = ace.edit('application-code');
      customFile.editor.setTheme('ace/theme/monokai');
      customFile.editor.session.setMode(new IniMode());
      customFile.editor.setOptions({
        showPrintMargin: false
      });
      customFile.editor.resize();
    }

    return initializeAce;
  }(),
  cbBeforeSendForm: function () {
    function cbBeforeSendForm(settings) {
      var result = settings;
      result.data = customFile.$formObj.form('get values');

      switch (customFile.$formObj.form('get value', 'mode')) {
        case 'append':
        case 'override':
          result.data.content = customFile.editor.getValue();
          break;

        default:
          result.data.content = '';
      }

      return result;
    }

    return cbBeforeSendForm;
  }(),
  cbAfterSendForm: function () {
    function cbAfterSendForm() {}

    return cbAfterSendForm;
  }(),
  initializeForm: function () {
    function initializeForm() {
      Form.$formObj = customFile.$formObj;
      Form.url = "".concat(globalRootUrl, "custom-files/save");
      Form.validateRules = customFile.validateRules;
      Form.cbBeforeSendForm = customFile.cbBeforeSendForm;
      Form.cbAfterSendForm = customFile.cbAfterSendForm;
      Form.initialize();
    }

    return initializeForm;
  }()
};
$(document).ready(function () {
  customFile.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9DdXN0b21GaWxlcy9jdXN0b20tZmlsZXMtbW9kaWZ5LmpzIl0sIm5hbWVzIjpbImN1c3RvbUZpbGUiLCIkZm9ybU9iaiIsIiQiLCIkdHlwZVNlbGVjdERyb3BEb3duIiwiJGFwcENvZGUiLCIkYXBwQ29kZUZyb21TZXJ2ZXIiLCIkZGlycnR5RmllbGQiLCJlZGl0b3IiLCJ2aWV3ZXIiLCJ2YWxpZGF0ZVJ1bGVzIiwibmFtZSIsImlkZW50aWZpZXIiLCJydWxlcyIsInR5cGUiLCJwcm9tcHQiLCJnbG9iYWxUcmFuc2xhdGUiLCJjZl9WYWxpZGF0ZU5hbWVJc0VtcHR5IiwiaW5pdGlhbGl6ZSIsImRyb3Bkb3duIiwib25DaGFuZ2UiLCJoaWRlU2hvd0NvZGUiLCJnZXRGaWxlQ29udGVudEZyb21TZXJ2ZXIiLCJpbml0aWFsaXplQWNlIiwiaW5pdGlhbGl6ZUZvcm0iLCJhY2VIZWlnaHQiLCJ3aW5kb3ciLCJpbm5lckhlaWdodCIsInJvd3NDb3VudCIsIk1hdGgiLCJyb3VuZCIsImxvYWQiLCJjc3MiLCJtb2RlIiwiZm9ybSIsIm5hdmlnYXRlRmlsZVN0YXJ0Iiwic2hvdyIsImhpZGUiLCJzZXRPcHRpb25zIiwibWF4TGluZXMiLCJyZXNpemUiLCJuYXZpZ2F0ZUZpbGVFbmQiLCJzZXRWYWx1ZSIsImdldFNlc3Npb24iLCJvbiIsInZhbCIsInJhbmRvbSIsInRyaWdnZXIiLCJjYkdldEZpbGVDb250ZW50RnJvbVNlcnZlciIsInJlc3BvbnNlIiwidW5kZWZpbmVkIiwiZmlsZUNvbnRlbnQiLCJkZWNvZGVVUklDb21wb25lbnQiLCJkYXRhIiwiY29udGVudCIsImZpbGVQYXRoIiwiZmlsZW5hbWUiLCJuZWVkT3JpZ2luYWwiLCJuZWVkTG9nZmlsZSIsIlBieEFwaSIsIkdldEZpbGVDb250ZW50IiwiSW5pTW9kZSIsImFjZSIsInJlcXVpcmUiLCJNb2RlIiwiZWRpdCIsInNlc3Npb24iLCJzZXRNb2RlIiwic2V0VGhlbWUiLCJzaG93UHJpbnRNYXJnaW4iLCJyZWFkT25seSIsImNiQmVmb3JlU2VuZEZvcm0iLCJzZXR0aW5ncyIsInJlc3VsdCIsImdldFZhbHVlIiwiY2JBZnRlclNlbmRGb3JtIiwiRm9ybSIsInVybCIsImdsb2JhbFJvb3RVcmwiLCJkb2N1bWVudCIsInJlYWR5Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7OztBQVFBO0FBRUEsSUFBTUEsVUFBVSxHQUFHO0FBQ2xCQyxFQUFBQSxRQUFRLEVBQUVDLENBQUMsQ0FBQyxtQkFBRCxDQURPO0FBRWxCQyxFQUFBQSxtQkFBbUIsRUFBRUQsQ0FBQyxDQUFDLGdDQUFELENBRko7QUFHbEJFLEVBQUFBLFFBQVEsRUFBRUYsQ0FBQyxDQUFDLG1CQUFELENBSE87QUFJbEJHLEVBQUFBLGtCQUFrQixFQUFFSCxDQUFDLENBQUMsNEJBQUQsQ0FKSDtBQUtsQkksRUFBQUEsWUFBWSxFQUFFSixDQUFDLENBQUMsU0FBRCxDQUxHO0FBTWxCSyxFQUFBQSxNQUFNLEVBQUUsRUFOVTtBQU9sQkMsRUFBQUEsTUFBTSxFQUFFLEVBUFU7QUFRbEJDLEVBQUFBLGFBQWEsRUFBRTtBQUNkQyxJQUFBQSxJQUFJLEVBQUU7QUFDTEMsTUFBQUEsVUFBVSxFQUFFLFVBRFA7QUFFTEMsTUFBQUEsS0FBSyxFQUFFLENBQ047QUFDQ0MsUUFBQUEsSUFBSSxFQUFFLE9BRFA7QUFFQ0MsUUFBQUEsTUFBTSxFQUFFQyxlQUFlLENBQUNDO0FBRnpCLE9BRE07QUFGRjtBQURRLEdBUkc7QUFtQmxCQyxFQUFBQSxVQW5Ca0I7QUFBQSwwQkFtQkw7QUFDWmpCLE1BQUFBLFVBQVUsQ0FBQ0csbUJBQVgsQ0FBK0JlLFFBQS9CLENBQXdDO0FBQ3ZDQyxRQUFBQSxRQUR1QztBQUFBLDhCQUM1QjtBQUNWbkIsWUFBQUEsVUFBVSxDQUFDb0IsWUFBWDtBQUNBcEIsWUFBQUEsVUFBVSxDQUFDcUIsd0JBQVg7QUFDQTs7QUFKc0M7QUFBQTtBQUFBLE9BQXhDO0FBT0FyQixNQUFBQSxVQUFVLENBQUNzQixhQUFYO0FBQ0F0QixNQUFB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QVgsQ0FBb0JnQyxJQUFwQixDQUF5QixXQUF6QixFQUFzQyxNQUF0QyxDQUFSO0FBQ0MsYUFBSyxRQUFMO0FBQ0EsYUFBSyxVQUFMO0FBQ0N1QyxVQUFBQSxNQUFNLENBQUNwQixJQUFQLENBQVlDLE9BQVosR0FBc0JyRCxVQUFVLENBQUNPLE1BQVgsQ0FBa0JrRSxRQUFsQixFQUF0QjtBQUNBOztBQUNEO0FBQ0NELFVBQUFBLE1BQU0sQ0FBQ3BCLElBQVAsQ0FBWUMsT0FBWixHQUFzQixFQUF0QjtBQU5GOztBQVFBLGFBQU9tQixNQUFQO0FBQ0E7O0FBekhpQjtBQUFBO0FBMEhsQkUsRUFBQUEsZUExSGtCO0FBQUEsK0JBMEhBLENBRWpCOztBQTVIaUI7QUFBQTtBQTZIbEJuRCxFQUFBQSxjQTdIa0I7QUFBQSw4QkE2SEQ7QUFDaEJvRCxNQUFBQSxJQUFJLENBQUMxRSxRQUFMLEdBQWdCRCxVQUFVLENBQUNDLFFBQTNCO0FBQ0EwRSxNQUFBQSxJQUFJLENBQUNDLEdBQUwsYUFBY0MsYUFBZDtBQUNBRixNQUFBQSxJQUFJLENBQUNsRSxhQUFMLEdBQXFCVCxVQUFVLENBQUNTLGFBQWhDO0FBQ0FrRSxNQUFBQSxJQUFJLENBQUNMLGdCQUFMLEdBQXdCdEUsVUFBVSxDQUFDc0UsZ0JBQW5DO0FBQ0FLLE1BQUFBLElBQUksQ0FBQ0QsZUFBTCxHQUF1QjFFLFVBQVUsQ0FBQzBFLGVBQWxDO0FBQ0FDLE1BQUFBLElBQUksQ0FBQzFELFVBQUw7QUFDQTs7QUFwSWlCO0FBQUE7QUFBQSxDQUFuQjtBQXVJQWYsQ0FBQyxDQUFDNEUsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBTTtBQUN2Qi9FLEVBQUFBLFVBQVUsQ0FBQ2lCLFVBQVg7QUFDQSxDQUZEIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoQykgTUlLTyBMTEMgLSBBbGwgUmlnaHRzIFJlc2VydmVkXG4gKiBVbmF1dGhvcml6ZWQgY29weWluZyBvZiB0aGlzIGZpbGUsIHZpYSBhbnkgbWVkaXVtIGlzIHN0cmljdGx5IHByb2hpYml0ZWRcbiAqIFByb3ByaWV0YXJ5IGFuZCBjb25maWRlbnRpYWxcbiAqIFdyaXR0ZW4gYnkgTmlrb2xheSBCZWtldG92LCAxMiAyMDE5XG4gKlxuICovXG5cbi8qIGdsb2JhbCBnbG9iYWxSb290VXJsLGdsb2JhbFRyYW5zbGF0ZSwgYWNlLCBGb3JtLCBQYnhBcGkgKi9cblxuY29uc3QgY3VzdG9tRmlsZSA9IHtcblx0JGZvcm1PYmo6ICQoJyNjdXN0b20tZmlsZS1mb3JtJyksXG5cdCR0eXBlU2VsZWN0RHJvcERvd246ICQoJyNjdXN0b20tZmlsZS1mb3JtIC50eXBlLXNlbGVjdCcpLFxuXHQkYXBwQ29kZTogJCgnI2FwcGxpY2F0aW9uLWNvZGUnKSxcblx0JGFwcENvZGVGcm9tU2VydmVyOiAkKCcjYXBwbGljYXRpb24tY29kZS1yZWFkb25seScpLFxuXHQkZGlycnR5RmllbGQ6ICQoJyNkaXJydHknKSxcblx0ZWRpdG9yOiAnJyxcblx0dmlld2VyOiAnJyxcblx0dmFsaWRhdGVSdWxlczoge1xuXHRcdG5hbWU6IHtcblx0XHRcdGlkZW50aWZpZXI6ICdmaWxlcGF0aCcsXG5cdFx0XHRydWxlczogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dHlwZTogJ2VtcHR5Jyxcblx0XHRcdFx0XHRwcm9tcHQ6IGdsb2JhbFRyYW5zbGF0ZS5jZl9WYWxpZGF0ZU5hbWVJc0VtcHR5LFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHR9LFxuXHRpbml0aWFsaXplKCkge1xuXHRcdGN1c3RvbUZpbGUuJHR5cGVTZWxlY3REcm9wRG93bi5kcm9wZG93bih7XG5cdFx0XHRvbkNoYW5nZSgpIHtcblx0XHRcdFx0Y3VzdG9tRmlsZS5oaWRlU2hvd0NvZGUoKTtcblx0XHRcdFx0Y3VzdG9tRmlsZS5nZXRGaWxlQ29udGVudEZyb21TZXJ2ZXIoKTtcblx0XHRcdH0sXG5cdFx0fSk7XG5cblx0XHRjdXN0b21GaWxlLmluaXRpYWxpemVBY2UoKTtcblx0XHRjdXN0b21GaWxlLmluaXRpYWxpemVGb3JtKCk7XG5cdFx0Y3VzdG9tRmlsZS5nZXRGaWxlQ29udGVudEZyb21TZXJ2ZXIoKTtcblx0fSxcblx0aGlkZVNob3dDb2RlKCkge1xuXHRcdGNvbnN0IGFjZUhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodC00NzU7XG5cdFx0Y29uc3Qgcm93c0NvdW50ID0gTWF0aC5yb3VuZChhY2VIZWlnaHQvMTYuMyk7XG5cdFx0JCh3aW5kb3cpLmxvYWQoZnVuY3Rpb24oKSB7XG5cdFx0XHQkKCcuYXBwbGljYXRpb24tY29kZS1yZWFkb25seScpLmNzcygnbWluLWhlaWdodCcsIGAke2FjZUhlaWdodH1weGApO1xuXHRcdFx0JCgnLmFwcGxpY2F0aW9uLWNvZGUnKS5jc3MoJ21pbi1oZWlnaHQnLCBgJHthY2VIZWlnaHR9cHhgKTtcblx0XHR9KTtcblx0XHRjb25zdCBtb2RlID0gY3VzdG9tRmlsZS4kZm9ybU9iai5mb3JtKCdnZXQgdmFsdWUnLCAnbW9kZScpO1xuXHRcdHN3aXRjaCAobW9kZSkge1xuXHRcdFx0Y2FzZSAnbm9uZSc6XG5cdFx0XHRcdGN1c3RvbUZpbGUudmlld2VyLm5hdmlnYXRlRmlsZVN0YXJ0KCk7XG5cdFx0XHRcdGN1c3RvbUZpbGUuJGFwcENvZGVGcm9tU2VydmVyLnNob3coKTtcblx0XHRcdFx0Y3VzdG9tRmlsZS4kYXBwQ29kZS5oaWRlKCk7XG5cdFx0XHRcdGN1c3RvbUZpbGUudmlld2VyLnNldE9wdGlvbnMoe1xuXHRcdFx0XHRcdG1heExpbmVzOiByb3dzQ291bnQsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRjdXN0b21GaWxlLnZpZXdlci5yZXNpemUoKVxuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2FwcGVuZCc6XG5cdFx0XHRcdGN1c3RvbUZpbGUuJGFwcENvZGVGcm9tU2VydmVyLnNob3coKTtcblx0XHRcdFx0Y3VzdG9tRmlsZS52aWV3ZXIubmF2aWdhdGVGaWxlRW5kKCk7XG5cdFx0XHRcdGN1c3RvbUZpbGUuZWRpdG9yLnNldFZhbHVlKGN1c3RvbUZpbGUuJGZvcm1PYmouZm9ybSgnZ2V0IHZhbHVlJywgJ2NvbnRlbnQnKSk7XG5cdFx0XHRcdGN1c3RvbUZpbGUuJGFwcENvZGUuc2hvdygpO1xuXHRcdFx0XHRjdXN0b21GaWxlLmVkaXRvci5nZXRTZXNzaW9uKCkub24oJ2NoYW5nZScsICgpID0+IHtcblx0XHRcdFx0XHRjdXN0b21GaWxlLiRkaXJydHlGaWVsZC52YWwoTWF0aC5yYW5kb20oKSk7XG5cdFx0XHRcdFx0Y3VzdG9tRmlsZS4kZGlycnR5RmllbGQudHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ292ZXJyaWRlJzpcblx0XHRcdFx0Y3VzdG9tRmlsZS5lZGl0b3IubmF2aWdhdGVGaWxlU3RhcnQoKTtcblx0XHRcdFx0Y3VzdG9tRmlsZS4kYXBwQ29kZUZyb21TZXJ2ZXIuaGlkZSgpO1xuXHRcdFx0XHRjdXN0b21GaWxlLmVkaXRvci5zZXRWYWx1ZShjdXN0b21GaWxlLiRmb3JtT2JqLmZvcm0oJ2dldCB2YWx1ZScsICdjb250ZW50JykpO1xuXHRcdFx0XHRjdXN0b21GaWxlLiRhcHBDb2RlLnNob3coKTtcblx0XHRcdFx0Y3VzdG9tRmlsZS5lZGl0b3Iuc2V0T3B0aW9ucyh7XG5cdFx0XHRcdFx0bWF4TGluZXM6IHJvd3NDb3VudCxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGN1c3RvbUZpbGUuZWRpdG9yLnJlc2l6ZSgpXG5cdFx0XHRcdGN1c3RvbUZpbGUuZWRpdG9yLmdldFNlc3Npb24oKS5vbignY2hhbmdlJywgKCkgPT4ge1xuXHRcdFx0XHRcdGN1c3RvbUZpbGUuJGRpcnJ0eUZpZWxkLnZhbChNYXRoLnJhbmRvbSgpKTtcblx0XHRcdFx0XHRjdXN0b21GaWxlLiRkaXJydHlGaWVsZC50cmlnZ2VyKCdjaGFuZ2UnKTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9LFxuXHRjYkdldEZpbGVDb250ZW50RnJvbVNlcnZlcihyZXNwb25zZSkge1xuXHRcdGlmIChyZXNwb25zZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRjb25zdCBmaWxlQ29udGVudCA9IGRlY29kZVVSSUNvbXBvbmVudChyZXNwb25zZS5kYXRhLmNvbnRlbnQpO1xuXHRcdFx0Y3VzdG9tRmlsZS52aWV3ZXIuc2V0VmFsdWUoZmlsZUNvbnRlbnQpO1xuXHRcdFx0Y3VzdG9tRmlsZS5oaWRlU2hvd0NvZGUoKTtcblx0XHR9XG5cdH0sXG5cdGdldEZpbGVDb250ZW50RnJvbVNlcnZlcigpIHtcblx0XHRjb25zdCBmaWxlUGF0aCA9IGN1c3RvbUZpbGUuJGZvcm1PYmouZm9ybSgnZ2V0IHZhbHVlJywgJ2ZpbGVwYXRoJyk7XG5cdFx0Y29uc3QgbW9kZSA9IGN1c3RvbUZpbGUuJGZvcm1PYmouZm9ybSgnZ2V0IHZhbHVlJywgJ21vZGUnKSAhPT0gJ292ZXJyaWRlJztcblx0XHRjb25zdCBkYXRhID0geyBmaWxlbmFtZTogZmlsZVBhdGgsIG5lZWRPcmlnaW5hbDogbW9kZSwgbmVlZExvZ2ZpbGU6IGZhbHNlIH07XG5cdFx0UGJ4QXBpLkdldEZpbGVDb250ZW50KGRhdGEsIGN1c3RvbUZpbGUuY2JHZXRGaWxlQ29udGVudEZyb21TZXJ2ZXIpO1xuXHR9LFxuXHRpbml0aWFsaXplQWNlKCkge1xuXHRcdGNvbnN0IEluaU1vZGUgPSBhY2UucmVxdWlyZSgnYWNlL21vZGUvanVsaWEnKS5Nb2RlO1xuXHRcdGN1c3RvbUZpbGUudmlld2VyID0gYWNlLmVkaXQoJ2FwcGxpY2F0aW9uLWNvZGUtcmVhZG9ubHknKTtcblx0XHRjdXN0b21GaWxlLnZpZXdlci5zZXNzaW9uLnNldE1vZGUobmV3IEluaU1vZGUoKSk7XG5cdFx0Y3VzdG9tRmlsZS52aWV3ZXIuc2V0VGhlbWUoJ2FjZS90aGVtZS9tb25va2FpJyk7XG5cdFx0Y3VzdG9tRmlsZS52aWV3ZXIuc2V0T3B0aW9ucyh7XG5cdFx0XHRzaG93UHJpbnRNYXJnaW46IGZhbHNlLFxuXHRcdFx0cmVhZE9ubHk6IHRydWVcblx0XHR9KTtcblx0XHRjdXN0b21GaWxlLnZpZXdlci5yZXNpemUoKTtcblxuXHRcdGN1c3RvbUZpbGUuZWRpdG9yID0gYWNlLmVkaXQoJ2FwcGxpY2F0aW9uLWNvZGUnKTtcblx0XHRjdXN0b21GaWxlLmVkaXRvci5zZXRUaGVtZSgnYWNlL3RoZW1lL21vbm9rYWknKTtcblx0XHRjdXN0b21GaWxlLmVkaXRvci5zZXNzaW9uLnNldE1vZGUobmV3IEluaU1vZGUoKSk7XG5cdFx0Y3VzdG9tRmlsZS5lZGl0b3Iuc2V0T3B0aW9ucyh7XG5cdFx0XHRzaG93UHJpbnRNYXJnaW46IGZhbHNlLFxuXHRcdH0pO1xuXHRcdGN1c3RvbUZpbGUuZWRpdG9yLnJlc2l6ZSgpO1xuXHR9LFxuXHRjYkJlZm9yZVNlbmRGb3JtKHNldHRpbmdzKSB7XG5cdFx0Y29uc3QgcmVzdWx0ID0gc2V0dGluZ3M7XG5cdFx0cmVzdWx0LmRhdGEgPSBjdXN0b21GaWxlLiRmb3JtT2JqLmZvcm0oJ2dldCB2YWx1ZXMnKTtcblx0XHRzd2l0Y2ggKGN1c3RvbUZpbGUuJGZvcm1PYmouZm9ybSgnZ2V0IHZhbHVlJywgJ21vZGUnKSkge1xuXHRcdFx0Y2FzZSAnYXBwZW5kJzpcblx0XHRcdGNhc2UgJ292ZXJyaWRlJzpcblx0XHRcdFx0cmVzdWx0LmRhdGEuY29udGVudCA9IGN1c3RvbUZpbGUuZWRpdG9yLmdldFZhbHVlKCk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0cmVzdWx0LmRhdGEuY29udGVudCA9ICcnO1xuXHRcdH1cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9LFxuXHRjYkFmdGVyU2VuZEZvcm0oKSB7XG5cblx0fSxcblx0aW5pdGlhbGl6ZUZvcm0oKSB7XG5cdFx0Rm9ybS4kZm9ybU9iaiA9IGN1c3RvbUZpbGUuJGZvcm1PYmo7XG5cdFx0Rm9ybS51cmwgPSBgJHtnbG9iYWxSb290VXJsfWN1c3RvbS1maWxlcy9zYXZlYDtcblx0XHRGb3JtLnZhbGlkYXRlUnVsZXMgPSBjdXN0b21GaWxlLnZhbGlkYXRlUnVsZXM7XG5cdFx0Rm9ybS5jYkJlZm9yZVNlbmRGb3JtID0gY3VzdG9tRmlsZS5jYkJlZm9yZVNlbmRGb3JtO1xuXHRcdEZvcm0uY2JBZnRlclNlbmRGb3JtID0gY3VzdG9tRmlsZS5jYkFmdGVyU2VuZEZvcm07XG5cdFx0Rm9ybS5pbml0aWFsaXplKCk7XG5cdH0sXG59O1xuXG4kKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XG5cdGN1c3RvbUZpbGUuaW5pdGlhbGl6ZSgpO1xufSk7XG5cbiJdfQ==